apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: "com.google.gms.google-services"
apply plugin: "com.google.firebase.crashlytics"
apply plugin: "com.google.firebase.firebase-perf"

apply from: '../environments.gradle'

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    defaultConfig {
        applicationId = "org.covital"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner rootProject.ext.testInstrumentationRunner
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            if ("$System.env.RELEASE_STORE_PASSWORD" != "null") {
                storeFile file("upload.keystore")
                storePassword "$System.env.RELEASE_STORE_PASSWORD"
                keyAlias "hinge"
                keyPassword "$System.env.RELEASE_ALIAS_PASSWORD"
            }
        }
    }

    buildTypes {
        debug {
            crunchPngs false
            debuggable true
            minifyEnabled false
            testCoverageEnabled false
            FirebasePerformance {
                instrumentationEnabled false
            }
            ext.betaDistributionGroupAliases = "internal-testers"
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
        release {
            minifyEnabled = true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    flavorDimensions "env", "client"
    productFlavors {
        med {
            dimension "client"
            buildConfigField "String", "BASE_URL", "\"" + environments.med.baseURL + "\""
        }
        users {
            dimension "client"
            buildConfigField "String", "BASE_URL", "\"" + environments.users.baseURL + "\""
        }
        internal {
            dimension "env"
            missingDimensionStrategy "env", "internal"
            applicationIdSuffix ".internal"
            ext.betaDistributionGroupAliases = "internal-testers"

            //only package english translations, and xxhdpi resources
            resConfigs "en", "xxhdpi"
        }
        production {
            dimension "env"
            missingDimensionStrategy "env", "production"
        }
    }

    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    //android appcompat
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    //android KTX libs
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"
    implementation "androidx.activity:activity-ktx:$activityKtxVersion"
    //android UI libs
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "com.google.android.material:material:$materialVersion"
    //animation
    implementation "com.airbnb.android:lottie:$lottieVersion"
    //markdownView
    implementation "us.feras.mdv:markdownview:$markdownViewVersion"
    //camera
    implementation "androidx.camera:camera-core:$cameraVersion"
    implementation "androidx.camera:camera-camera2:$cameraVersion"
    implementation "androidx.camera:camera-lifecycle:$cameraVersion"
    implementation "androidx.camera:camera-view:$cameraViewVersion"
    //firebase
    implementation "com.google.firebase:firebase-crashlytics:$firebaseCrashlyticsVersion"
    implementation "com.google.firebase:firebase-perf:$firebasePerformanceVersion"
    implementation "com.google.firebase:firebase-analytics:$firebaseAnalyticsVersion"
    //flexbox
    implementation "com.google.android:flexbox:$flexboxVersion"
    //date-time
    implementation "com.jakewharton.threetenabp:threetenabp:$threeTenVersion"
    //android architecture component
    implementation "androidx.navigation:navigation-fragment:$navigationVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    //glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    //network
    implementation "com.squareup.retrofit2:converter-moshi:$moshiVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitCoverterVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3Version"
    //dependency injection
    implementation "org.koin:koin-core:$koinVersion"
    implementation "org.koin:koin-core-ext:$koinVersion"
    implementation "org.koin:koin-android:$koinVersion"
    implementation "org.koin:koin-androidx-scope:$koinVersion"
    implementation "org.koin:koin-androidx-viewmodel:$koinVersion"
    //test
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$testEspressoCoreVersion"
}
